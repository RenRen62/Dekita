name: CI/CD for Mobile
on:
  push:
    branches:
      - 'main'
      - 'staging'
      - 'production'
    paths:
      - 'apps/mobile/**'
  pull_request:
    types:
      - 'labeled'
    branches:
      - 'main'
      - 'staging'
      - 'production'
    paths:
      - 'apps/mobile/**'
jobs:
  test:
    name: Execute Test
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'labeled' && github.event.label.name == 'tested' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: '@dekita/mobile'

      - name: Execute jest
        run: |
          pnpm --filter @dekita/mobile test
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Jest coverage comment
        if: always()
        uses: MishaKav/jest-coverage-comment@main
        with:
          coverage-summary-path: ./coverage/coverage-summary.json
          coverage-path: ./coverage/coverage.txt

  mobile_deploy:
    name: EAS Update
    if: ${{ ! failure() && github.event_name == 'push' }}
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: '@dekita/mobile'

      - name: Set env to stg
        if: ${{ github.base_ref == 'staging' || github.ref == 'refs/heads/staging' }}
        run: |
          echo "API_URL=${{ secrets.API_URL_STG }}" >> $GITHUB_ENV
          echo "APP_VARIANT=staging" >> $GITHUB_ENV

      - name: Generate .env file
        working-directory: apps/mobile
        run: |
          echo "EXPO_PUBLIC_API_URL=$API_URL" >> .env
          echo "APP_VARIANT=$APP_VARIANT" >> .env

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: EAS Update Stg
        if: ${{  github.ref == 'refs/heads/staging' }}
        working-directory: apps/mobile
        run: |
          npx --package eas-cli eas update --non-interactive --auto
